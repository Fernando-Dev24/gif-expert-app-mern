{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GIfGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","action","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","catch","error","console","log","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACG,sBAAMC,OAAO,GAAGC,SATE,SAACC,GACnBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAU,OAAKR,GAAL,mBAAoBQ,OAC5CP,EAAc,MAKjB,SACG,uBACGQ,KAAK,OACLC,MAAOV,EACPW,SAlBiB,SAACP,GACxBH,EAAcG,EAAEQ,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEGI,MAAMF,GAFT,cAEdG,EAFc,gBAGCA,EAASC,OAHV,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARpB,kBAWbM,GAXa,4CAAH,sDCWLO,EATK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC9B,OACG,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCqBEO,EArBC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACf,ECHyB,SAACA,GAC1B,MAA0Bf,mBAAS,CAChCsB,KAAM,GACNa,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACPxB,EAAQC,GACJwB,MAAK,SAAAX,GACHS,EAAS,CACNf,KAAMM,EACNO,SAAS,OAGdK,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC/B,CAAC1B,IAEGqB,EDdwBQ,CAAa7B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACG,qCACG,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SACG,6BACIH,EAAOJ,KAAI,SAACqB,GAAD,OACT,cAAC,EAAD,eAEOA,GADCA,EAAMnB,eEQjBoB,EApBM,WAClB,MAAoC9C,mBAAS,CAAC,qBAA9C,mBAAOS,EAAP,KAAmBV,EAAnB,KAEA,OACG,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACIU,EAAWe,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEGA,SAAUA,GADLA,Y,MCTvBgC,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.7737b538.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n   const [inputValue, setInputValue] = useState('');\n\n   /* handleInputChange */\n   const handleInputChange = (e) => {\n      setInputValue(e.target.value);\n   };\n\n   /* handleSubmit */\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      if(inputValue.trim().length > 2) {\n         setCategories(categories => [inputValue, ...categories]);\n         setInputValue('');\n      };\n   };\n\n   return (\n      <form action=\"\" onSubmit={handleSubmit}>\n         <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n         />\n      </form>\n   );\n};\n\nAddCategory.propTypes = {\n   setCategories: PropTypes.func.isRequired\n};\n \nexport default AddCategory;","export const getGifs = async (category) => {\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=wkiMHbDPSntsojcCQ4VB8LTQ3dNIx34v`;\n   const response = await fetch(url);\n   const {data} = await response.json();\n   const gifs = data.map(img => {\n      return {\n         id: img.id,\n         title: img.title,\n         url: img.images?.downsized_medium.url\n      }\n   });\n   return gifs;\n};","import React from 'react';\n\nconst GifGridItem = ({id, title, url}) => {\n   return (\n      <div className=\"card animate__animated animate__fadeIn\">\n         <img src={url} alt={title} />\n         <p>{title}</p>\n      </div>\n   );\n}\n \nexport default GifGridItem;","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n/* Components */\nimport GifGridItem from './GIfGridItem';\n\n\nconst GifGrid = ({category}) => {\n   const {data:images, loading} = useFetchGifs(category);\n\n   return (\n      <>\n         <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n         {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n         <div className=\"card-grid\">\n            <ol>\n               {images.map((image) =>\n                  <GifGridItem\n                     key={image.id}\n                     {...image}\n                  />\n               )}\n            </ol>\n         </div>\n      </>\n   );\n}\n\nexport default GifGrid;","import { useState, useEffect } from \"react\";\n/* Helpers */\nimport {getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n   const [state, setState] = useState({\n      data: [],\n      loading: true\n   });\n\n   useEffect(() => {\n      getGifs(category)\n         .then(images => {\n            setState({\n               data: images,\n               loading: false\n            });\n         })\n         .catch(error => console.log(error));\n   }, [category]);\n\n   return state;\n};","import React, {useState} from 'react';\n/* Components */\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n   const [categories, setCategories] = useState(['Naruto Shippuden']);\n\n   return (\n      <>\n         <h2>GifExpertApp</h2>\n         <AddCategory setCategories={setCategories} />\n         <hr />\n         <ol>\n            {categories.map(category => \n               <GifGrid\n                  key={category}\n                  category={category}\n               />   \n            )}\n         </ol>\n      </>\n   );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n/* Components */\nimport GifExperApp from './GifExpertApp';\n/* Sources */\nimport './index.css';\n\nReactDOM.render(<GifExperApp />, document.getElementById('root'));"],"sourceRoot":""}